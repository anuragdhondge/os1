#include <stdio.h>
#include <string.h>

// Maximum number of contacts in the address book
#define MAX_CONTACTS 100

// Structure to represent a contact
typedef struct {
    char name[50];
    char email[50];
    char phone[15];
} Contact;

// Function prototypes
void createAddressBook();
void viewAddressBook();
void insertRecord();
void deleteRecord();
void modifyRecord();

// Global array to store contacts
Contact addressBook[MAX_CONTACTS];

// Global variable to track the number of contacts in the address book
int numContacts = 0;

int main() {
    char choice;

    do {
        printf("\nAddress Book Menu\n");
        printf("a) Create address book\n");
        printf("b) View address book\n");
        printf("c) Insert a record\n");
        printf("d) Delete a record\n");
        printf("e) Modify a record\n");
        printf("f) Exit\n");
        printf("Enter your choice: ");
        scanf(" %c", &choice);

        switch (choice) {
            case 'a':
                createAddressBook();
                break;
            case 'b':
                viewAddressBook();
                break;
            case 'c':
                insertRecord();
                break;
            case 'd':
                deleteRecord();
                break;
            case 'e':
                modifyRecord();
                break;
            case 'f':
                printf("Exiting...\n");
                break;
            default:
                printf("Invalid choice! Please try again.\n");
        }
    } while (choice != 'f');

    return 0;
}

void createAddressBook() {
    numContacts = 0;
    printf("Address book created successfully.\n");
}

void viewAddressBook() {
    if (numContacts == 0) {
        printf("Address book is empty.\n");
        return;
    }

    printf("Address Book:\n");
    printf("Name\t\tEmail\t\tPhone\n");
    for (int i = 0; i < numContacts; i++) {
        printf("%s\t\t%s\t\t%s\n", addressBook[i].name, addressBook[i].email, addressBook[i].phone);
    }
}

void insertRecord() {
    if (numContacts == MAX_CONTACTS) {
        printf("Address book is full. Cannot insert more records.\n");
        return;
    }

    printf("Enter name: ");
    scanf("%s", addressBook[numContacts].name);
    printf("Enter email: ");
    scanf("%s", addressBook[numContacts].email);
    printf("Enter phone number: ");
    scanf("%s", addressBook[numContacts].phone);

    numContacts++;
    printf("Record inserted successfully.\n");
}

void deleteRecord() {
    char name[50];
    printf("Enter the name of the contact to delete: ");
    scanf("%s", name);

    int i;
    for (i = 0; i < numContacts; i++) {
        if (strcmp(addressBook[i].name, name) == 0) {
            break;
        }
    }

    if (i == numContacts) {
        printf("Contact not found.\n");
    } else {
        for (int j = i; j < numContacts - 1; j++) {
            addressBook[j] = addressBook[j + 1];
        }
        numContacts--;
        printf("Record deleted successfully.\n");
    }
}

void modifyRecord() {
    char name[50];
    printf("Enter the name of the contact to modify: ");
    scanf("%s", name);

    int i;
    for (i = 0; i < numContacts; i++) {
        if (strcmp(addressBook[i].name, name) == 0) {
            break;
        }
    }

    if (i == numContacts) {
        printf("Contact not found.\n");
    } else {
        printf("Enter new name: ");
        scanf("%s", addressBook[i].name);
        printf("Enter new email: ");
        scanf("%s", addressBook[i].email);
        printf("Enter new phone number: ");
        scanf("%s", addressBook[i].phone);
        printf("Record modified successfully.\n");
    }
}
